# SPDX-License-Identifier: Apache-2.0

[tox]
envlist = fmt, lint, unit, functional

[testenv]
# Use PyTorch CPU build instead of CUDA build in test envs. CUDA dependencies
# are huge. This reduces venv from 5.7 GB to 1.5 GB.
deps =
    -r requirements/test.txt
    -r requirements/torch-cpu.txt

[testenv:unit]
description = run unit tests
commands =
    pytest {posargs:tests}
allowlist_externals = pytest

[testenv:unitcov]
description = run unit tests with coverage
commands = pytest --cov=cli --cov-report term --cov-report=html:coverage-{env_name} --cov-report=xml:coverage-{env_name}.xml --html=durations/{env_name}.html {posargs:tests -m "not (examples or slow)"} -W error::UserWarning
allowlist_externals = pytest

[testenv:lint]
description = lint with pylint
commands = pylint cli tests
allowlist_externals = pylint

[testenv:fmt]
description = format with pre-commit
# don't inherit dependencies, fmt doesn't need a fill installation
deps =
    -r requirements-dev.txt
skip_install = true
skipsdist = true
commands = ./scripts/fmt.sh
allowlist_externals = ./scripts/fmt.sh

[testenv:functional]
description = run functional tests
commands = ./scripts/functional-tests.sh
allowlist_externals = ./scripts/functional-tests.sh

[testenv:pip-compile]
description = check requirements/*.txt with pip-compile-multi
skipsdist = true
skip_install = true
deps = 
    pip-compile-multi
    -c requirements/constraints.txt
commands =
    pip-compile-multi {posargs:verify}

# full run takes very long and downloads > 20 GB from PyPI and PyTorch.
[testenv:pip-compile-generate]
description = generate and update requirements/*.txt with pip-compile-multi
skipsdist = true
skip_install = true
deps = 
    pip-compile-multi
    -c requirements/constraints.txt
# needs --allow-unsafe to pick up existing setuptools from virtual env
commands =
    pip-compile-multi --live --use-cache --allow-unsafe --annotate-index {posargs}
